name: Rebuild on New Upstream Tag

on:
  schedule:
    - cron: '0 5 * * *'  # every 15 minutes
  workflow_dispatch:

permissions:
  contents: write

jobs:
  rebuild-if-updated:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Fetch latest update timestamp from Docker Hub
        id: get_info
        run: |
          meta=$(curl -s https://hub.docker.com/v2/repositories/henrygd/beszel-agent/tags/latest)
          tag_name=$(echo "$meta" | jq -r '.name')
          last_updated=$(echo "$meta" | jq -r '.last_updated')
      
          if [ -z "$last_updated" ] || [ "$last_updated" == "null" ]; then
            echo "ERROR: Upstream metadata fetch failed!" >&2
            exit 1
          fi
      
          echo "tag=$tag_name" >> $GITHUB_OUTPUT
          echo "last_updated=$last_updated" >> $GITHUB_OUTPUT

      - name: Check for upstream update
        id: check
        run: |
          last_seen=$(cat .last_seen_update 2>/dev/null || echo none)
          echo "Previous: $last_seen"
          echo "Current: ${{ steps.get_info.outputs.last_updated }}"

          if [ "$last_seen" = "$current" ]; then
            echo "No new update â€” skipping build."
            echo "updated=false" >> $GITHUB_OUTPUT
          else
            echo "updated=true" >> $GITHUB_OUTPUT
          fi

      - name: Log in to Docker Hub
        if: steps.check.outputs.updated == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Generate timestamp tag
        if: steps.check.outputs.updated == 'true'
        id: timestamp
        run: |
          tag=$(date -u +'%Y-%m-%d')
          echo "tag=$tag" >> $GITHUB_OUTPUT

      - name: Build and push GPU-patched image
        if: steps.check.outputs.updated == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            daltonsbaker/beszel-agent-nvidia:${{ steps.timestamp.outputs.tag }}
            daltonsbaker/beszel-agent-nvidia:latest
            
      - name: Update Docker Hub README
        if: steps.check.outputs.updated == 'true'
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: daltonsbaker/beszel-agent-nvidia
          readme-filepath: ./README.md

      - name: Save update timestamp
        if: steps.check.outputs.updated == 'true'
        run: |
          echo "${{ steps.get_info.outputs.last_updated }}" > .last_seen_update
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .last_seen_update
          git commit -m "Track last updated: ${{ steps.get_info.outputs.last_updated }}"
          git push
